<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/mvc
  http://www.springframework.org/schema/mvc/spring-mvc.xsd
  http://www.springframework.org/schema/tx 
  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
  http://www.springframework.org/schema/context
  http://www.springframework.org/schema/context/spring-context.xsd
  http://www.springframework.org/schema/aop   
  http://www.springframework.org/schema/aop/spring-aop-3.2.xsd"> 

    <!-- Bean definitions go here -->
    
    <!--<bean id="logger" class="com.swcguild.studentrostermaven.logging.LoggerNullImpl"/>
    <bean id="dao" class="com.swcguild.studentrostermaven.dao.StudentDaoMapImpl" >
        <constructor-arg ref="logger"/>
    </bean> -->
    
    
    
    
    
    
    <tx:annotation-driven />      
   
<!-- Define Data Source - this defines the connection to the database -->
<bean id="dataSource"
      class="org.apache.commons.dbcp.BasicDataSource">
     <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
     <!-- test-applicationContext.xml should point to StudentRoster_test -->
     <!-- value="jdbc:mysql://localhost:3306/StudentRoster_test" /> -->
     <property name="url"
               value="jdbc:mysql://localhost:3306/StudentRoster_test" />
     <property name="username" value="root" />
     <property name="password" value="root" />
     <property name="initialSize" value="5" />
     <property name="maxActive" value="10" />
</bean>
    
<!-- Define Transaction Manager - just need to define it so we can inject it -->
<!-- The Transaction Manager needs a Data Source - it uses setter injection  -->
<bean id="transactionManager"
      class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
   <property name="dataSource" ref="dataSource" />
</bean>    
    
<!-- Define JdbcTemplate - just need to define it so we can inject it -->
<!-- The JdbcTemplate needs a Data Source - it uses setting injection -->
<bean id="jdbcTemplate"
      class="org.springframework.jdbc.core.JdbcTemplate">
      <property name="dataSource" ref="dataSource" />
</bean>
    
<!-- Define the database DAO - it needs a JdbcTemplate via setting injection -->
<bean id="dao"
      class="com.swcguild.studentrostermaven.dao.StudentDaoDbImpl">
      <property name="jdbcTemplate" ref="jdbcTemplate" />
</bean>
    
    
    
    
    
    
    
       
    
</beans>